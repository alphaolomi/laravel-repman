{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Laravel Repman <p>Laravel Repman provides an expressive, fluent interface to Repman.io's services.</p> <p>Repman.io is a private Composer repository manager. It allows you to host your own Composer repository and manage packages from it. It also allows you to mirror packages from Packagist.</p> <p></p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>PHP &gt;= 8.1</li> <li>Laravel &gt;= 9.0</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>You can install the package via composer:</p> <pre><code>composer require alphaolomi/laravel-repman\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":"<pre><code>php artisan vendor:publish --tag=\"repman-config\"\n</code></pre>"},{"location":"#service-manager","title":"Service Manager","text":"<pre><code>use AlphaOlomi\\Repman\\RepmanService;\n\n$repman = new RepmanService('your-token',);\n\n// Collection of organizations\n$orgsCollection =  $repman-&gt;organizations()-&gt;list();\n\n$orgArray = $orgsCollection-&gt;all();\n\nprint_r($orgArray);\n</code></pre>"},{"location":"#facades","title":"Facades","text":"<p>This package also provides a facade for easy access to the service manager.</p> <pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n$orgsCollection =  Repman::organizations()-&gt;list();\n\n$orgArray = $orgsCollection-&gt;all();\n\nprint_r($orgArray);\n</code></pre>"},{"location":"#internal-misc","title":"Internal &amp; Misc","text":"<p>Package utilize data objects to make it easy to work with the data returned from the API.</p>"},{"location":"#testing","title":"Testing","text":"<p>This package uses Pest PHP testing framework</p> <p></p> <p>Next: Usage</p>"},{"location":"API/","title":"API Documentation","text":"<p>These are the available methods for the Repman API. Examples use <code>Repman</code> Facade.</p>"},{"location":"API/#organization","title":"Organization","text":""},{"location":"API/#list-all-organizations","title":"List all organizations","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n$orgsCollection =  Repman::organizations()-&gt;list();\n</code></pre>"},{"location":"API/#create-organization","title":"Create organization","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n/** @var AlphaOlomi\\Repman\\DataObjects\\Organization */\n$org =  Repman::organizations()-&gt;create('org-name');\n\n\necho $org-&gt;id; // 1\necho $org-&gt;name; // org-name\necho $org-&gt;toArray();\n\n// =&gt; [\n//  \"id\" =&gt; \"9e680010-c8ad-4d01-a04b-00a981c25548\",\n//  \"type\" =&gt; \"github-oauth\",\n//  \"url\" =&gt; \"https://github.com/alphaolomi/laracon\",\n//  \"name\" =&gt; \"alphaolomi/laracon\",\n//  \"latestReleasedVersion\" =&gt; \"no stable release\",\n//  \"latestReleaseDate\" =&gt; \"Sun Apr 03 2022 13:15:56 GMT+0200\",\n//  \"description\" =&gt; \"LaraCon TZ 2022 Demo\",\n//  \"lastSyncAt\" =&gt; \"Fri Jun 03 2022 09:38:42 GMT+0200\",\n//  \"lastSyncError\" =&gt; \"\",\n//  \"webhookCreatedAt\" =&gt; \"Fri Jun 03 2022 09:38:39 GMT+0200\",\n//  \"isSynchronizedSuccessfully\" =&gt; true,\n//  \"scanResultStatus\" =&gt; \"error\",\n//  \"scanResultDate\" =&gt; \"Mon Sep 19 2022 10:00:32 GMT+0200\",\n//  \"lastScanResultContent\" =&gt; [\n//  \"exception\" =&gt; [\n//      \"RuntimeException\" =&gt; \"Version 9999999-dev for package alphaolomi/laracon not found\",\n//      ],\n//  ],\n//  \"keepLastReleases\" =&gt; 0,\n//  \"enableSecurityScan\" =&gt; true,\n// ]\n</code></pre>"},{"location":"API/#packages","title":"Packages","text":""},{"location":"API/#list-all-packages","title":"List all packages","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n$packagesCollection =  Repman::packages()-&gt;list();\n</code></pre>"},{"location":"API/#add-package","title":"Add package","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n/** @var AlphaOlomi\\Repman\\DataObjects\\Package */\n$package =  Repman::packages('my-org')-&gt;add([\n    'repository'=&gt;'alphaolomi/laracon',\n    'type'=&gt;'github',\n    'keepLastReleases'=&gt;0\n]);\n</code></pre>"},{"location":"API/#update-package","title":"Update package","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n/** @var AlphaOlomi\\Repman\\DataObjects\\Package */\n$package =  Repman::packages('my-org')-&gt;update('my-package', [\n    'url'=&gt;'http://my-cool-package.io',\n    'type'=&gt;'github',\n    'keepLastReleases'=&gt;0\n]);\n\n$package-&gt;toString();\n</code></pre>"},{"location":"API/#synchronize-package","title":"Synchronize package","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\nRepman::packages('my-org')-&gt;sync('my-package');\n</code></pre>"},{"location":"API/#remove-package","title":"Remove package","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n\nRepman::packages('my-org')-&gt;remove('my-package');\n</code></pre>"},{"location":"API/#tokens","title":"Tokens","text":""},{"location":"API/#list-all-tokens","title":"List all tokens","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n$tokensCollection =  Repman::tokens('my-org')-&gt;list();\n\n$tokenArray =  $tokensCollection-&gt;all();\n</code></pre>"},{"location":"API/#generate-token","title":"Generate token","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n/** @var AlphaOlomi\\Repman\\DataObjects\\Token */\n$token =  Repman::tokens('my-org')-&gt;generate('my-token');\n</code></pre>"},{"location":"API/#regenerate-token","title":"Regenerate token","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\n/** @var AlphaOlomi\\Repman\\DataObjects\\Token */\n$token =  Repman::tokens('my-org')-&gt;regenerate('A1A1A1A1A1A1A1A1A1A1');\n</code></pre>"},{"location":"API/#delete-token","title":"Delete token","text":"<pre><code>use AlphaOlomi\\Repman\\Facades\\Repman;\n\nRepman::tokens('my-org')-&gt;delete('A1A1A1A1A1A1A1A1A1A1');\n</code></pre>"}]}